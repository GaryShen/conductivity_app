<% if @grid_evaluation.errors.any? %>
  <div>
    <h2><%= pluralize(@grid_evaluation.errors.count, "error") %> prohibited this grid_evaluation from being saved:</h2>
    <ul>
    <% @grid_evaluation.errors.full_messages.each do |message| %>
      <li><%= message %></li>
    <% end %>
    </ul>
  </div>
<% end %>

<%= form_with model: @grid_evaluation, url: grid_evaluations_path, method: :post, local: true, data: { turbo: false } do |form| %>
  <div class="form-group">
    <%= form.label :grid_file, "Upload Grid File" %>
    <%= form.file_field :grid_file, class: 'form-control' %>
  </div>

  <div class="form-group">
    <%= form.label :grid, "Enter Grid Data Manually" %>
    <br>
    <%= button_tag "Generate Random Grid", type: 'button', id: 'generate_grid_button', class: 'btn btn-secondary' %>
    <%= label_tag :n, "Grid Size:" %>
    <%= number_field_tag :n, 5, min: 1 %>
    <%= form.text_area :grid, rows: 5, class: 'form-control' %>
  </div>
  <%= form.submit "Submit", class: 'btn btn-primary' %>
<% end %>

<script>
function isValidGridInput(input) {
  return /^[01\n]*$/.test(input);
}

document.getElementById('generate_grid_button').addEventListener('click', function () {
  let gridSize = document.getElementById('n').value;
  fetch(`<%= generate_random_grid_grid_evaluations_path %>?n=${gridSize}`)
    .then(response => response.json())
    .then(data => {
      document.getElementById('grid_evaluation_grid').value = data.grid;
    });
});

document.getElementById('grid_evaluation_grid').addEventListener('input', function(e) {
  if (!isValidGridInput(e.target.value)) {
    alert('Invalid input! Only 0, 1, and newline characters are allowed.');
    e.target.value = e.target.value.replace(/[^01\n]/g, '');
  }
});
</script>
